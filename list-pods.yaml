apiVersion: v1
kind: Pod
metadata:
  name: list-pods
  namespace: default
spec:
  serviceAccountName: list-pods
  restartPolicy: Never
  containers:
  - name: list-pods
    image: curlimages/curl:8.2.0
    command: ["/bin/sh"]
    args: ["/script/list-pods.sh"]
    volumeMounts:
    - name: script
      mountPath: "/script"
  volumes:
  - name: script
    configMap:
      name: list-pods
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: list-pods
  namespace: default
---
kind: Role
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  namespace: default
  name: list-pods
rules:
  - apiGroups: [""]
    resources: ["pods"]
    verbs: ["list"]
---
kind: RoleBinding
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: list-pods
  namespace: default
subjects:
  - kind: ServiceAccount
    name: list-pods
    namespace: default
roleRef:
  kind: Role
  name: list-pods
  apiGroup: rbac.authorization.k8s.io
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: list-pods
data:
  list-pods.sh: |
    #!/bin/bash
    APISERVER=https://kubernetes.default.svc
    SERVICEACCOUNT=/var/run/secrets/kubernetes.io/serviceaccount
    TOKEN=$(cat ${SERVICEACCOUNT}/token)
    CACERT=${SERVICEACCOUNT}/ca.crt
    curl -s --cacert ${CACERT} --header "Authorization: Bearer ${TOKEN}" -X GET ${APISERVER}/api/v1/namespaces/default/pods

